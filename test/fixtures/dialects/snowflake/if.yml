# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 2f2f6c1a38183a5ccc230c376a205efb47af1a2697ee686bec9b4cb772730c6a
file:
- statement:
    create_procedure_statement:
    - keyword: CREATE
    - keyword: OR
    - keyword: REPLACE
    - keyword: PROCEDURE
    - function_name:
        function_name_identifier: example_if
    - function_parameter_list:
        bracketed:
          start_bracket: (
          parameter: flag
          data_type:
            data_type_identifier: INTEGER
          end_bracket: )
    - keyword: RETURNS
    - data_type:
        data_type_identifier: VARCHAR
    - keyword: LANGUAGE
    - keyword: SQL
    - keyword: AS
    - raw_dollar_quote: $$
    - scripting_block_statement:
      - keyword: BEGIN
      - statement:
          if_statement:
          - keyword: IF
          - bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: FLAG
                comparison_operator:
                  raw_comparison_operator: '='
                numeric_literal: '1'
              end_bracket: )
          - keyword: THEN
          - statement:
              return_statement:
                keyword: RETURN
                expression:
                  quoted_literal: "'one'"
          - statement_terminator: ;
          - keyword: ELSEIF
          - bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: FLAG
                comparison_operator:
                  raw_comparison_operator: '='
                numeric_literal: '2'
              end_bracket: )
          - keyword: THEN
          - statement:
              return_statement:
                keyword: RETURN
                expression:
                  quoted_literal: "'two'"
          - statement_terminator: ;
          - keyword: ELSE
          - statement:
              return_statement:
                keyword: RETURN
                expression:
                  quoted_literal: "'Unexpected input.'"
          - statement_terminator: ;
          - keyword: END
          - keyword: IF
      - statement_terminator: ;
      - keyword: END
    - statement_terminator: ;
    - raw_dollar_quote: $$
- statement_terminator: ;
- statement:
    execute_immediate_clause:
    - keyword: EXECUTE
    - keyword: IMMEDIATE
    - scripting_block_statement:
      - keyword: BEGIN
      - statement:
          if_statement:
          - keyword: IF
          - bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: FLAG
                comparison_operator:
                  raw_comparison_operator: '='
                numeric_literal: '1'
              end_bracket: )
          - keyword: THEN
          - statement:
              return_statement:
                keyword: RETURN
                expression:
                  quoted_literal: "'one'"
          - statement_terminator: ;
          - keyword: ELSEIF
          - bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: FLAG
                comparison_operator:
                  raw_comparison_operator: '='
                numeric_literal: '2'
              end_bracket: )
          - keyword: THEN
          - statement:
              return_statement:
                keyword: RETURN
                expression:
                  quoted_literal: "'two'"
          - statement_terminator: ;
          - keyword: ELSEIF
          - bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: FLAG
                comparison_operator:
                  raw_comparison_operator: '='
                numeric_literal: '3'
              end_bracket: )
          - keyword: THEN
          - statement:
              return_statement:
                keyword: RETURN
                expression:
                  quoted_literal: "'three'"
          - statement_terminator: ;
          - keyword: ELSE
          - statement:
              return_statement:
                keyword: RETURN
                expression:
                  quoted_literal: "'Unexpected input.'"
          - statement_terminator: ;
          - keyword: END
          - keyword: IF
      - statement_terminator: ;
      - keyword: END
- statement_terminator: ;
- statement:
    execute_immediate_clause:
    - keyword: EXECUTE
    - keyword: IMMEDIATE
    - scripting_block_statement:
      - keyword: BEGIN
      - statement:
          if_statement:
          - keyword: IF
          - bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: FLAG
                comparison_operator:
                  raw_comparison_operator: '='
                numeric_literal: '1'
              end_bracket: )
          - keyword: THEN
          - statement:
              return_statement:
                keyword: RETURN
                expression:
                  quoted_literal: "'one'"
          - statement_terminator: ;
          - keyword: ELSE
          - statement:
              return_statement:
                keyword: RETURN
                expression:
                  quoted_literal: "'Unexpected input.'"
          - statement_terminator: ;
          - keyword: END
          - keyword: IF
      - statement_terminator: ;
      - keyword: END
- statement_terminator: ;

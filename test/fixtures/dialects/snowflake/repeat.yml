# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: b9bd518261c88c112255409c67f0e402ba265f96f39f2e08b4d4e231e4b280d1
file:
- statement:
    execute_immediate_clause:
    - keyword: EXECUTE
    - keyword: IMMEDIATE
    - scripting_block_statement:
      - keyword: BEGIN
      - statement:
          repeat_segment:
          - keyword: REPEAT
          - statement:
              scripting_let_statement:
                variable: counter
                assignment_operator: :=
                expression:
                  column_reference:
                    naked_identifier: counter
                  binary_operator: +
                  numeric_literal: '1'
          - statement_terminator: ;
          - keyword: UNTIL
          - bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: counter
                comparison_operator:
                  raw_comparison_operator: '>'
                numeric_literal: '8'
              end_bracket: )
          - keyword: END
          - keyword: REPEAT
      - statement_terminator: ;
      - keyword: END
- statement_terminator: ;
- statement:
    execute_immediate_clause:
    - keyword: EXECUTE
    - keyword: IMMEDIATE
    - scripting_block_statement:
      - keyword: BEGIN
      - statement:
          repeat_segment:
          - keyword: REPEAT
          - statement:
              scripting_let_statement:
                variable: counter
                assignment_operator: :=
                expression:
                  column_reference:
                    naked_identifier: counter
                  binary_operator: +
                  numeric_literal: '1'
          - statement_terminator: ;
          - keyword: UNTIL
          - bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: counter
                comparison_operator:
                  raw_comparison_operator: '>'
                numeric_literal: '8'
              end_bracket: )
          - keyword: END
          - keyword: REPEAT
          - table_reference:
              naked_identifier: MY_COUNT
      - statement_terminator: ;
      - keyword: END
- statement_terminator: ;

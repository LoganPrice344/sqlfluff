# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: d78d5f3a609b052bb95fd66a443543ac242a7179d5666bcfe889fbb1024ffad9
file:
- statement:
    execute_immediate_clause:
    - keyword: EXECUTE
    - keyword: IMMEDIATE
    - quoted_literal: "'select 1'"
- statement_terminator: ;
- statement:
    execute_immediate_clause:
    - keyword: EXECUTE
    - keyword: IMMEDIATE
    - test_dollar_quote:
      - raw_dollar_quote: $$
      - word: SELECT
      - word: PI
      - bracketed:
          start_bracket: (
          end_bracket: )
      - semicolon: ;
      - raw_dollar_quote: $$
- statement_terminator: ;
- statement:
    set_statement:
      keyword: SET
      variable: pie
      comparison_operator:
        raw_comparison_operator: '='
      expression:
        test_dollar_quote:
        - raw_dollar_quote: $$
        - word: SELECT
        - word: PI
        - bracketed:
            start_bracket: (
            end_bracket: )
        - semicolon: ;
        - raw_dollar_quote: $$
- statement_terminator: ;
- statement:
    set_statement:
      keyword: SET
      variable: one
      comparison_operator:
        raw_comparison_operator: '='
      expression:
        numeric_literal: '1'
- statement_terminator: ;
- statement:
    set_statement:
      keyword: SET
      variable: two
      comparison_operator:
        raw_comparison_operator: '='
      expression:
        numeric_literal: '2'
- statement_terminator: ;
- statement:
    execute_immediate_clause:
    - keyword: EXECUTE
    - keyword: IMMEDIATE
    - variable: $pie
- statement_terminator: ;
- statement:
    execute_immediate_clause:
    - keyword: EXECUTE
    - keyword: IMMEDIATE
    - variable: $pie
    - keyword: USING
    - bracketed:
      - start_bracket: (
      - variable: one
      - comma: ','
      - variable: two
      - end_bracket: )
- statement_terminator: ;
- statement:
    set_statement:
      keyword: SET
      variable: three
      comparison_operator:
        raw_comparison_operator: '='
      expression:
        quoted_literal: "'select ? + ?'"
- statement_terminator: ;
- statement:
    execute_immediate_clause:
    - keyword: EXECUTE
    - keyword: IMMEDIATE
    - bind_variable:
        colon: ':'
        variable: three
- statement_terminator: ;
- statement:
    execute_immediate_clause:
    - keyword: EXECUTE
    - keyword: IMMEDIATE
    - bind_variable:
        colon: ':'
        variable: three
    - keyword: USING
    - bracketed:
      - start_bracket: (
      - variable: one
      - comma: ','
      - variable: two
      - end_bracket: )
- statement_terminator: ;
- statement:
    execute_immediate_clause:
    - keyword: EXECUTE
    - keyword: IMMEDIATE
    - keyword: FROM
    - quoted_literal: "'./insert-inventory.sql'"
- statement_terminator: ;
- statement:
    execute_immediate_clause:
    - keyword: EXECUTE
    - keyword: IMMEDIATE
    - keyword: FROM
    - storage_location:
        stage_path: '@my_stage/scripts/create-inventory.sql'
- statement_terminator: ;

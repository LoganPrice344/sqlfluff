# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: 44affdd17afa03a3ba8aecf2e96a7a81188b7783a367df65823173425ade32fc
file:
- statement:
    scripting_block_statement:
    - keyword: begin
    - statement:
        select_statement:
          select_clause:
            keyword: select
            select_clause_element:
              numeric_literal: '1'
    - statement_terminator: ;
    - statement:
        select_statement:
          select_clause:
            keyword: select
            select_clause_element:
              numeric_literal: '2'
    - statement_terminator: ;
    - statement:
        scripting_block_statement:
        - keyword: begin
        - statement:
            select_statement:
              select_clause:
                keyword: select
                select_clause_element:
                  numeric_literal: '3'
        - statement_terminator: ;
        - statement:
            select_statement:
              select_clause:
                keyword: select
                select_clause_element:
                  numeric_literal: '4'
        - statement_terminator: ;
        - keyword: end
    - statement_terminator: ;
    - keyword: end
- statement_terminator: ;
- statement:
    execute_immediate_clause:
    - keyword: EXECUTE
    - keyword: IMMEDIATE
    - scripting_block_statement:
      - keyword: BEGIN
      - statement:
          create_table_statement:
          - keyword: CREATE
          - keyword: TABLE
          - table_reference:
              naked_identifier: parent
          - bracketed:
              start_bracket: (
              column_definition:
                naked_identifier: ID
                data_type:
                  data_type_identifier: INTEGER
              end_bracket: )
      - statement_terminator: ;
      - statement:
          create_table_statement:
          - keyword: CREATE
          - keyword: TABLE
          - table_reference:
              naked_identifier: child
          - bracketed:
            - start_bracket: (
            - column_definition:
                naked_identifier: ID
                data_type:
                  data_type_identifier: INTEGER
            - comma: ','
            - column_definition:
                naked_identifier: parent_ID
                data_type:
                  data_type_identifier: INTEGER
            - end_bracket: )
      - statement_terminator: ;
      - statement:
          return_statement:
            keyword: RETURN
            expression:
              quoted_literal: "'Completed'"
      - statement_terminator: ;
      - keyword: END
- statement_terminator: ;
- statement:
    execute_immediate_clause:
    - keyword: EXECUTE
    - keyword: IMMEDIATE
    - scripting_block_statement:
      - keyword: BEGIN
      - statement:
          scripting_let_statement:
            variable: i
            assignment_operator: :=
            expression:
              numeric_literal: '1'
      - statement_terminator: ;
      - statement:
          scripting_let_statement:
            variable: j
            assignment_operator: :=
            expression:
              numeric_literal: '1'
      - statement_terminator: ;
      - statement:
          while_segment:
          - keyword: WHILE
          - bracketed:
              start_bracket: (
              expression:
                column_reference:
                  naked_identifier: i
                comparison_operator:
                - raw_comparison_operator: <
                - raw_comparison_operator: '='
                numeric_literal: '4'
              end_bracket: )
          - keyword: DO
          - statement:
              while_segment:
              - keyword: WHILE
              - bracketed:
                  start_bracket: (
                  expression:
                    column_reference:
                      naked_identifier: j
                    comparison_operator:
                    - raw_comparison_operator: <
                    - raw_comparison_operator: '='
                    numeric_literal: '4'
                  end_bracket: )
              - keyword: DO
              - statement:
                  if_statement:
                  - keyword: IF
                  - bracketed:
                      start_bracket: (
                      expression:
                        column_reference:
                          naked_identifier: j
                        comparison_operator:
                          raw_comparison_operator: '='
                        numeric_literal: '3'
                      end_bracket: )
                  - keyword: THEN
                  - break_segment:
                      keyword: BREAK
                      object_reference:
                        naked_identifier: outer_loop
                  - statement_terminator: ;
                  - keyword: END
                  - keyword: IF
              - statement_terminator: ;
              - statement:
                  scripting_let_statement:
                    variable: j
                    assignment_operator: :=
                    expression:
                      column_reference:
                        naked_identifier: j
                      binary_operator: +
                      numeric_literal: '1'
              - statement_terminator: ;
              - keyword: END
              - keyword: WHILE
              - table_reference:
                  naked_identifier: inner_loop
          - statement_terminator: ;
          - statement:
              scripting_let_statement:
                variable: i
                assignment_operator: :=
                expression:
                  column_reference:
                    naked_identifier: i
                  binary_operator: +
                  numeric_literal: '1'
          - statement_terminator: ;
          - keyword: END
          - keyword: WHILE
          - table_reference:
              naked_identifier: outer_loop
      - statement_terminator: ;
      - statement:
          return_statement:
            keyword: RETURN
            expression:
              column_reference:
                naked_identifier: i
      - statement_terminator: ;
      - keyword: END
- statement_terminator: ;
